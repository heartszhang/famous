<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:famousfront.viewmodels"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:metro="http://schemas.codeplex.com/elysium"
                    xmlns:params="http://schemas.codeplex.com/elysium/params"
                    xmlns:ctrls="clr-namespace:famousfront.controls"
                    mc:Ignorable="d">
    <DataTemplate DataType="{x:Type vm:FeedEntriesViewModel}" d:IsDesignTimeCreatable="false">
    <DataTemplate.Resources>
      <!--
      <Style TargetType="{x:Type ListBox}" x:Key="FeedEntriesListStyle" BasedOn="{StaticResource {x:Type ListBox}}" >
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/> 
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
      </Style>
      -->
      <Style x:Key="FeedEntryItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">       
<!--        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
        -->
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
              <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                
                <Grid >
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="IsEnabled" Value="True" />
              <Condition Property="IsSelected" Value="True" />
            </MultiTrigger.Conditions>
            <MultiTrigger.Setters>
              <Setter Property="Background" Value="{StaticResource SemiPaleBrush}" />
              <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </MultiTrigger.Setters>
          </MultiTrigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="IsEnabled" Value="False" />
              <Condition Property="IsSelected" Value="True" />
            </MultiTrigger.Conditions>
            <MultiTrigger.Setters>
              <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
              <Setter Property="Foreground" Value="{StaticResource ContrastBrush}" />
            </MultiTrigger.Setters>
          </MultiTrigger>
        </Style.Triggers>
      </Style>
    </DataTemplate.Resources>
    <Grid><!-- Background="{StaticResource SemiPaleBrush}">-->
      <ListBox ItemsSource="{Binding Entries}" >
        <i:Interaction.Behaviors>
          <ctrls:ListBoxScrollToTopBehavior />
          <ctrls:ListBoxPreventRequestBringIntoViewBehavior/>
        </i:Interaction.Behaviors>
        <ListBox.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate DataType="{x:Type CollectionViewGroup}">
                <TextBlock Text="{Binding Name}" TextElement.FontWeight="SemiBold"
                           Margin="{Binding Path=(params:General.BoldPadding), RelativeSource={RelativeSource Self}}"
                           TextElement.FontSize="{Binding Path=(params:General.TitleFontSize), RelativeSource={RelativeSource Self}}"/>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
            <GroupStyle.ContainerStyle>
              <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                      <StackPanel Margin="{Binding Path=(params:General.BoldPadding), RelativeSource={RelativeSource Self}}">
                        <ContentPresenter x:Name="PART_Header"/>
                        <Rectangle StrokeThickness="1" Stroke="{StaticResource SemiPaleBrush}"/>
                        <ItemsPresenter x:Name="ItemsPresenter" Margin="0"/>
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>

            </GroupStyle.ContainerStyle>
          </GroupStyle>
        </ListBox.GroupStyle>
      </ListBox>
      <Grid VerticalAlignment="Top" x:Name="_indicator"
                  Visibility="{Binding IsReady,Mode=OneWay,Converter={StaticResource BoolToVisibilityConverter},ConverterParameter=true}">        
        <metro:ProgressBar  Value="100" VerticalAlignment="Top"
          State="{Binding IsBusying,Mode=OneWay,Converter={StaticResource BoolToBusyIndicatorConverter}}" />
        <TextBlock Text="{Binding Reason}" x:Name="_desc"
                   HorizontalAlignment="Center" Margin="{Binding Path=(params:General.SemiBoldPadding), RelativeSource={RelativeSource self}, Mode=OneWay}"/>
      </Grid>

      <ContentPresenter x:Name="_video_room" Content="{Binding VideoService}" VerticalAlignment="Bottom" />
    </Grid>
  </DataTemplate>
</ResourceDictionary>