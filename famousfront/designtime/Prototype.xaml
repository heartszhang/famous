<UserControl
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:vm="clr-namespace:famousfront.viewmodels"
  xmlns:metro="http://schemas.codeplex.com/elysium"
  xmlns:params="http://schemas.codeplex.com/elysium/params"
  x:Class="famousfront.designtime.Prototype"
  d:DesignWidth="600" 
  params:Design.Theme="Light"      
  mc:Ignorable="d" d:DesignHeight="300" Background="white" >
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        
      </ResourceDictionary.MergedDictionaries>
    	<Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
    		<Setter Property="Background" Value="White"/>
    		<Setter Property="BorderBrush" Value="#FF777777"/>
    		<Setter Property="BorderThickness" Value="0"/>
    		<Setter Property="Foreground" Value="Black"/>
    		<Setter Property="FontSize" Value="{Binding (params:General.ContentFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
    		<Setter Property="FontStretch" Value="Normal"/>
    		<Setter Property="FontStyle" Value="Normal"/>
    		<Setter Property="FontWeight" Value="Normal"/>
    		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
    		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
    		<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    		<Setter Property="Focusable" Value="True"/>
    		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="HorizontalContentAlignment" Value="Left"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="{Binding (params:General.BoldPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
    		<Setter Property="SnapsToDevicePixels" Value="True"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ListBox}">
    					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
    						<ScrollViewer Background="{x:Null}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Focusable="False" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}">
    							<ItemsPresenter/>
    						</ScrollViewer>
    					</Border>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<DataTrigger>
    				<DataTrigger.Binding>
    					<Binding ConverterParameter="18" Mode="OneWay" Path="FontSize" RelativeSource="{RelativeSource Self}">
    						<Binding.Converter>
    							<metro:IsGreaterThanConverter/>
    						</Binding.Converter>
    					</Binding>
    				</DataTrigger.Binding>
    				<Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
    			</DataTrigger>
    			<Trigger Property="IsEnabled" Value="False">
    				<Setter Property="BorderBrush" Value="#FFB8B5B2"/>
    				<Setter Property="Foreground" Value="#FFB8B5B2"/>
    			</Trigger>
    			<Trigger Property="IsGrouping" Value="True">
    				<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    	<ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
    		<VirtualizingStackPanel IsItemsHost="True"/>
    	</ItemsPanelTemplate>
    	<Style x:Key="FocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
    	<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
    	<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
    	<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    	<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
    	<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
    	<Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
    		<Setter Property="SnapsToDevicePixels" Value="True"/>
    		<Setter Property="Padding" Value="4,1"/>
    		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="BorderBrush" Value="Transparent"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ListBoxItem}">
    					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Border>
    					<ControlTemplate.Triggers>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="IsMouseOver" Value="True"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
    							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
    						</MultiTrigger>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="Selector.IsSelectionActive" Value="False"/>
    								<Condition Property="IsSelected" Value="True"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
    							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
    						</MultiTrigger>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="Selector.IsSelectionActive" Value="True"/>
    								<Condition Property="IsSelected" Value="True"/>
    							</MultiTrigger.Conditions>
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
    							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
    						</MultiTrigger>
    						<Trigger Property="IsEnabled" Value="False">
    							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid x:Name="LayoutRoot">
    <ListBox Style="{DynamicResource ListBoxStyle1}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}"/>
  </Grid>
</UserControl>
