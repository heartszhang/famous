<UserControl x:Class="famousfront.designtime.Prototype"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ff="clr-namespace:famousfront"
             xmlns:vm="clr-namespace:famousfront.viewmodels" d:DesignWidth="400"
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:params="http://schemas.codeplex.com/elysium/params" 
  params:General.ContentFontSize="{StaticResource NormalTextSize}"
  params:General.HeaderFontSize="{StaticResource LargeTextSize}"
  params:General.TitleFontSize="{StaticResource VeryLargeTextSize}"             
             TextElement.FontFamily="{StaticResource LightFont}"
             d:DesignHeight="300" 
             mc:Ignorable="d" Background="White" d:DataContext="{d:DesignData /SampleData/ContentViewModelSampleData.xaml}">
  <UserControl.Resources>
    <Style x:Key="RichTextBoxStyle1" TargetType="{x:Type RichTextBox}">
      <Style.Resources>
        <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
          <Setter Property="OverridesDefaultStyle" Value="True"/>
          <Setter Property="Background" Value="Transparent"/>
        </Style>
      </Style.Resources>
      <Style.BasedOn>
        <Style TargetType="{x:Type TextBoxBase}">
          <Setter Property="CaretBrush" Value="Black"/>
          <Setter Property="SelectionBrush" Value="#FF777777"/>
          <Style.BasedOn>
            <Style TargetType="{x:Type Control}">
              <Setter Property="BorderBrush" Value="#FF777777"/>
              <Setter Property="BorderThickness" Value="{Binding (params:General.SemiBoldThickness), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
              <Setter Property="Foreground" Value="Black"/>
              <Setter Property="FontSize" Value="{Binding (params:General.TextFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
              <Setter Property="FontStretch" Value="Normal"/>
              <Setter Property="FontStyle" Value="Normal"/>
              <Setter Property="FontWeight" Value="Normal"/>
              <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
              <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
              <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
              <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
              <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
              <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
              <Setter Property="HorizontalContentAlignment" Value="Left"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="Padding" Value="{Binding (params:General.DefaultPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
              <Setter Property="ContextMenu">
                <Setter.Value>
                  <ContextMenu>
                    <ContextMenu.Style>
                      <Style TargetType="{x:Type ContextMenu}">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderBrush" Value="#FF4D4D4D"/>
                        <Setter Property="BorderThickness" Value="{Binding (params:General.DefaultThickness), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="params:MenuBase.SubmenuBackground" Value="{Binding Background, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="params:MenuBase.SubmenuBorderBrush" Value="{Binding BorderBrush, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="params:MenuBase.SubmenuBorderThickness" Value="{Binding BorderThickness, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontSize" Value="{Binding (params:General.ContentFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="FontStretch" Value="Normal"/>
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
                        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                        <Setter Property="params:General.ShadowBrush" Value="Black"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="{Binding (params:General.BoldPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                              <Border x:Name="LayoutRoot">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontWeight="{TemplateBinding FontWeight}" TextElement.FontStyle="{TemplateBinding FontStyle}" TextElement.FontStretch="{TemplateBinding FontStretch}" TextElement.FontSize="{TemplateBinding FontSize}" TextElement.FontFamily="{TemplateBinding FontFamily}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}">
                                  <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                  <Setter Property="Effect" TargetName="LayoutRoot">
                                    <Setter.Value>
                                      <DropShadowEffect BlurRadius="4" Color="{Binding (params:General.ShadowBrush).(SolidColorBrush.Color), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}" Direction="315" Opacity="0.3" ShadowDepth="2"/>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Background" TargetName="LayoutRoot" Value="Transparent"/>
                                  <Setter Property="Padding" TargetName="LayoutRoot" Value="0,0,6,6"/>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                          <DataTrigger>
                            <DataTrigger.Binding>
                              <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                  <metro:IsGreaterThanConverter/>
                                </Binding.Converter>
                              </Binding>
                            </DataTrigger.Binding>
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </ContextMenu.Style>
                    <MenuItem Command="ApplicationCommands.Cut" Header="Cut"/>
                    <MenuItem Command="ApplicationCommands.Copy" Header="Copy"/>
                    <MenuItem Command="ApplicationCommands.Paste" Header="Paste"/>
                  </ContextMenu>
                </Setter.Value>
              </Setter>
              <Setter Property="SnapsToDevicePixels" Value="True"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                      <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"/>
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <DataTrigger>
                  <DataTrigger.Binding>
                    <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize" RelativeSource="{RelativeSource Self}">
                      <Binding.Converter>
                        <metro:IsGreaterThanConverter/>
                      </Binding.Converter>
                    </Binding>
                  </DataTrigger.Binding>
                  <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="BorderBrush" Value="#FF017BCD"/>
                  <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="BorderBrush" Value="#FFB8B5B2"/>
                  <Setter Property="Foreground" Value="#FFB8B5B2"/>
                </Trigger>
              </Style.Triggers>
            </Style>
          </Style.BasedOn>
          <Style.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                <Condition Property="IsReadOnly" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="#FF017BCD"/>
              <Setter Property="Foreground" Value="Black"/>
            </MultiTrigger>
          </Style.Triggers>
        </Style>
      </Style.BasedOn>
    </Style>
  </UserControl.Resources>
  <Grid x:Name="LayoutRoot" >
    <ContentControl Content="{Binding Mode=OneWay}" ContentTemplate="{StaticResource {x:Type vm:ContentViewModel}}"/>
    <Grid>
    <RichTextBox Style="{DynamicResource RichTextBoxStyle1}" Background="Transparent" Padding="0">
      <FlowDocument >
        <Paragraph>
          ssadfasdf
        </Paragraph>
        <Paragraph>
          ssadfasdf
        </Paragraph>
        <Paragraph>
          ssadfasdf
        </Paragraph>
      </FlowDocument>
    </RichTextBox>
    </Grid>
    <StackPanel Background="White" VerticalAlignment="Top">
      <metro:ProgressBar State="Normal" Value="100"/>
      <TextBlock Text="some test yu see here" HorizontalAlignment="Center"/>
    </StackPanel>
  </Grid>
</UserControl>
